/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arunaedu.main;

import static com.anuraedu.common.SQ.LIKESEARCH;
import static com.anuraedu.common.SQ.SAVE;
import static com.anuraedu.common.SQ.SEARCH;
import static com.anuraedu.common.SQ.STATUSSEARCH;
import static com.anuraedu.common.SQ.getResult;
import com.anuraedu.db.DB;
import static com.arunaedu.main.StudentRegistration.studentIdFromReg;
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class StudentClass extends javax.swing.JFrame {

    DefaultTableModel dtm1;
    String classidFieldText = " CLASS ID";

    public StudentClass() {
        initComponents();
        setLocationRelativeTo(null);
        txt_studentId.setText(studentIdFromReg);
        loadAddedClasses();
        jTabbedPane1.setSelectedIndex(1);
        classIDDefText();
        yearMonthTextStyle();
        buttonColors();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_studentId = new javax.swing.JTextField();
        txt_classId = new javax.swing.JTextField();
        btn_save = new javax.swing.JButton();
        btn_activate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbox_allClasses = new javax.swing.JCheckBox();
        cbox_classSuggest = new javax.swing.JCheckBox();
        btn_inactivate = new javax.swing.JButton();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        btn_inactivate1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(178, 230, 245));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txt_studentId.setEditable(false);
        txt_studentId.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        txt_classId.setForeground(new java.awt.Color(76, 76, 76));
        txt_classId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_classIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_classIdFocusLost(evt);
            }
        });
        txt_classId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_classIdKeyReleased(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_activate.setText("Activate");
        btn_activate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_activateActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(20, 125, 177));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STUDENT CLASSES");
        jLabel1.setOpaque(true);

        cbox_allClasses.setText("Show all classes");
        cbox_allClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_allClassesActionPerformed(evt);
            }
        });

        cbox_classSuggest.setText("Class word search");
        cbox_classSuggest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classSuggestActionPerformed(evt);
            }
        });

        btn_inactivate.setText("Inactivate");
        btn_inactivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inactivateActionPerformed(evt);
            }
        });

        btn_inactivate1.setText("Close");
        btn_inactivate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inactivate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbox_allClasses)
                        .addGap(18, 18, 18)
                        .addComponent(cbox_classSuggest)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btn_activate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_classId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_studentId, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                                .addComponent(btn_save, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_inactivate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_inactivate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 47, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_studentId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_classId, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jMonthChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbox_allClasses)
                    .addComponent(cbox_classSuggest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_activate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_inactivate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_inactivate1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Description", "Contract ID", "Class Fees", "status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);

        jTabbedPane1.addTab("Class", jScrollPane4);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Status"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable3);

        jTabbedPane1.addTab("Added Classes", jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbox_allClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_allClassesActionPerformed
        if (cbox_allClasses.isSelected()) {
            jTabbedPane1.setSelectedIndex(0);
            setResultSet(0);
        } else {
            removeAllRows(jTable2);
        }
    }//GEN-LAST:event_cbox_allClassesActionPerformed

    private void cbox_classSuggestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classSuggestActionPerformed
        if (cbox_classSuggest.isSelected()) {
            setResultSet(1);
        } else {
            removeAllRows(jTable2);
        }
    }//GEN-LAST:event_cbox_classSuggestActionPerformed

    private void txt_classIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classIdFocusGained
        if (txt_classId.getText().equals(classidFieldText)) {
            txt_classId.setText("");
            classIdFilledInfoText();
        }

    }//GEN-LAST:event_txt_classIdFocusGained

    private void txt_classIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classIdFocusLost
        if (txt_classId.getText().equals("")) {
            classIDDefText();
        }
    }//GEN-LAST:event_txt_classIdFocusLost

    private void txt_classIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_classIdKeyReleased
        setResultSet(1);
    }//GEN-LAST:event_txt_classIdKeyReleased

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        txt_classId.setText((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
        classIdFilledInfoText();
    }//GEN-LAST:event_jTable2MouseClicked

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed

        try {

            String month = null;
            if (jMonthChooser1.getMonth() <= 8) {
                month = "0" + (jMonthChooser1.getMonth() + 1);
            } else {
                month = String.valueOf((jMonthChooser1.getMonth()) + 1);
            }

            if (STATUSSEARCH("student", "id_student", txt_studentId.getText())) {
                if (STATUSSEARCH("class", "id_class", txt_classId.getText())) {
                    SAVE("student_class", "'" + txt_studentId.getText() + "','" + txt_classId.getText() + "','1','" + String.valueOf(jYearChooser1.getYear()) + "-" + month + "-00'");
                    JOptionPane.showMessageDialog(this, "Saved !");
                    txt_classId.setText(classidFieldText);
                    loadAddedClasses();
                } else {
                    JOptionPane.showMessageDialog(this, "Class is not Active !");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Student is not Active !");
            }

        } catch (SQLIntegrityConstraintViolationException ex) {
            JOptionPane.showMessageDialog(this, "Already has added to the database !, Use Activate or Incativate functions.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_activateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_activateActionPerformed
        try {
            DB.push("update student_class set status = '1' where id_student='"
                    + txt_studentId.getText() + "' and id_class = '"
                    + txt_classId.getText() + "'");
            JOptionPane.showMessageDialog(this, "Activated !");
            loadAddedClasses();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_activateActionPerformed

    private void btn_inactivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inactivateActionPerformed
        try {
            DB.push("update student_class set status = '0' where id_student='"
                    + txt_studentId.getText() + "' and id_class = '"
                    + txt_classId.getText() + "'");
            JOptionPane.showMessageDialog(this, "Inactivated !");
            loadAddedClasses();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_inactivateActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        txt_classId.setText((String) jTable3.getValueAt(jTable3.getSelectedRow(), 0));
    }//GEN-LAST:event_jTable3MouseClicked

    private void btn_inactivate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inactivate1ActionPerformed
        dispose();
    }//GEN-LAST:event_btn_inactivate1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentClass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_activate;
    private javax.swing.JButton btn_inactivate;
    private javax.swing.JButton btn_inactivate1;
    private javax.swing.JButton btn_save;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbox_allClasses;
    private javax.swing.JCheckBox cbox_classSuggest;
    private javax.swing.JLabel jLabel1;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JTextField txt_classId;
    private javax.swing.JTextField txt_studentId;
    // End of variables declaration//GEN-END:variables

    private void setResultSet(int i) {
        try {
            if (i == 0) {
                SEARCH("class");
                removeAllRows(jTable2);
                fillTables(i);
            } else if (i == 1) {
                LIKESEARCH("class", "id_class", txt_classId.getText());
                removeAllRows(jTable2);
                fillTables(i);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void fillTables(int i) {
        try {
            ResultSet rs = getResult();
            while (rs.next()) {

                if (i == 0 || i == 1) {
                    String id_class = rs.getString("id_class");
                    String description = rs.getString("description");
                    String id_contract = rs.getString("id_contract");
                    String class_fees = String.valueOf(rs.getDouble("class_fees"));
                    boolean status = rs.getBoolean("status");

                    Vector v = new Vector();

                    v.add(id_class);
                    v.add(description);
                    v.add(id_contract);
                    v.add(class_fees);
                    if (status) {
                        v.add("Active");
                    } else {
                        v.add("Inactive");
                    }

                    dtm1 = (DefaultTableModel) jTable2.getModel();
                    dtm1.addRow(v);
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void removeAllRows(JTable j) {
        for (int i = j.getRowCount() - 1; i >= 0; i--) {
            ((DefaultTableModel) j.getModel()).removeRow(i);
        }
    }

    private void loadAddedClasses() {

        try {
            SEARCH("student_class", "id_student", txt_studentId.getText());
            ResultSet rs = getResult();
            removeAllRows(jTable3);
            while (rs.next()) {
                String classId = rs.getString("id_class");
                boolean status = rs.getBoolean("status");
                Vector v = new Vector();
                v.add(classId);
                if (status) {
                    v.add("Active");
                } else {
                    v.add("Inactive");
                }
                dtm1 = (DefaultTableModel) jTable3.getModel();
                dtm1.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void classIDDefText() {
        txt_classId.setForeground(new java.awt.Color(76, 76, 76));
        Font font1 = new Font("Tahoma", Font.PLAIN, 12);
        txt_classId.setFont(font1);
        txt_classId.setText(classidFieldText);
    }

    private void classIdFilledInfoText() {
        txt_classId.setForeground(new java.awt.Color(0, 0, 0));
        Font font1 = new Font("Tahoma", Font.PLAIN, 16);
        txt_classId.setFont(font1);
    }

    private void yearMonthTextStyle() {
        jYearChooser1.setForeground((new java.awt.Color(76, 76, 76)));
        jMonthChooser1.setForeground((new java.awt.Color(76, 76, 76)));
        Font font1 = new Font("Tahoma", Font.PLAIN, 14);
        jYearChooser1.setFont(font1);
        jMonthChooser1.setFont(font1);
    }

    private void buttonColors() {
        Color colorBackgroud = new Color(20, 125, 177);
        Color colorForeground = new Color(255, 255, 255);

        btn_save.setBackground(colorBackgroud);
        btn_save.setForeground(colorForeground);

        btn_activate.setBackground(colorBackgroud);
        btn_activate.setForeground(colorForeground);
        
        btn_inactivate.setBackground(colorBackgroud);
        btn_inactivate.setForeground(colorForeground);
    }

}
