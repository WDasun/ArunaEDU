/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arunaedu.main;

import static com.anuraedu.common.SQ.LIKESEARCH;
import static com.anuraedu.common.SQ.PVTSEARCH3;
import static com.anuraedu.common.SQ.PVTSEARCH4;
import static com.anuraedu.common.SQ.SAVE;
import static com.anuraedu.common.SQ.SEARCH;
import static com.anuraedu.common.SQ.STATUSSEARCH;
import static com.anuraedu.common.SQ.UPDATE;
import static com.anuraedu.common.SQ.getResult;
import com.anuraedu.db.DB;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class LecturerContract extends javax.swing.JInternalFrame {

    String startDate,endDate,prevText;
    ArrayList<JTextField> jf;
    ArrayList<String> defaultText;
    DefaultTableModel dtm1;

    public LecturerContract() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) this.getUI();
        bif.setNorthPane(null);
        
        addDefaultTextToList();
        addTextFieldsToList();
        setDefaultText();
        setDefaultTextField();
        
        genarateContractId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_contractid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_description = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser_startDate = new com.toedter.calendar.JDateChooser();
        jDateChooser_endDate = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rad_active = new javax.swing.JRadioButton();
        rad_inactive = new javax.swing.JRadioButton();
        txt_subjectid = new javax.swing.JTextField();
        txt_lecturerid = new javax.swing.JTextField();
        btn_save = new javax.swing.JLabel();
        btn_update = new javax.swing.JLabel();
        btn_delete = new javax.swing.JLabel();
        btn_resetMain = new javax.swing.JLabel();
        cbox_subjectIdSuggestions = new javax.swing.JCheckBox();
        cbox_lecturerIdSuggestions = new javax.swing.JCheckBox();
        cbox_subjectIdShowAll = new javax.swing.JCheckBox();
        cbox_lecturerIdShowAll = new javax.swing.JCheckBox();
        cbox_contracSuggestions = new javax.swing.JCheckBox();
        cbox_contracShowAll = new javax.swing.JCheckBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_editSelected1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btn_editSelected2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        btn_editSelected = new javax.swing.JLabel();

        setBackground(new java.awt.Color(111, 187, 217));
        setPreferredSize(new java.awt.Dimension(1670, 1040));
        setVisible(true);

        jPanel2.setBackground(new java.awt.Color(111, 187, 217));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(76, 76, 76));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Contract ID");

        txt_contractid.setEditable(false);
        txt_contractid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_contractid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_contractid.setFocusable(false);
        txt_contractid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_contractidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_contractidFocusLost(evt);
            }
        });
        txt_contractid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_contractidKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 76, 76));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Description");

        txt_description.setColumns(20);
        txt_description.setRows(5);
        jScrollPane1.setViewportView(txt_description);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(76, 76, 76));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Subject ID");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(76, 76, 76));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Lecturer ID");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(76, 76, 76));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Start Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(76, 76, 76));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("End Date");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(76, 76, 76));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Status");

        buttonGroup4.add(rad_active);
        rad_active.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rad_active.setSelected(true);
        rad_active.setText("Active");

        buttonGroup4.add(rad_inactive);
        rad_inactive.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rad_inactive.setText("Inactive");

        txt_subjectid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_subjectid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_subjectid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_subjectidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_subjectidFocusLost(evt);
            }
        });
        txt_subjectid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_subjectidKeyReleased(evt);
            }
        });

        txt_lecturerid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_lecturerid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_lecturerid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_lectureridFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_lectureridFocusLost(evt);
            }
        });
        txt_lecturerid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_lectureridKeyReleased(evt);
            }
        });

        btn_save.setBackground(new java.awt.Color(69, 141, 152));
        btn_save.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_save.setText("Save");
        btn_save.setOpaque(true);
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_saveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_saveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_saveMouseExited(evt);
            }
        });

        btn_update.setBackground(new java.awt.Color(69, 141, 152));
        btn_update.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_update.setText("Update");
        btn_update.setOpaque(true);
        btn_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_updateMouseExited(evt);
            }
        });

        btn_delete.setBackground(new java.awt.Color(69, 141, 152));
        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_delete.setText("Delete");
        btn_delete.setOpaque(true);
        btn_delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_deleteMouseExited(evt);
            }
        });

        btn_resetMain.setBackground(new java.awt.Color(69, 141, 152));
        btn_resetMain.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_resetMain.setForeground(new java.awt.Color(255, 255, 255));
        btn_resetMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_resetMain.setText("Reset");
        btn_resetMain.setOpaque(true);
        btn_resetMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_resetMainMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_resetMainMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_resetMainMouseExited(evt);
            }
        });

        cbox_subjectIdSuggestions.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(cbox_subjectIdSuggestions);
        cbox_subjectIdSuggestions.setSelected(true);
        cbox_subjectIdSuggestions.setText("suggestions");

        cbox_lecturerIdSuggestions.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(cbox_lecturerIdSuggestions);
        cbox_lecturerIdSuggestions.setSelected(true);
        cbox_lecturerIdSuggestions.setText("suggestions");

        cbox_subjectIdShowAll.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(cbox_subjectIdShowAll);
        cbox_subjectIdShowAll.setText("show all");
        cbox_subjectIdShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_subjectIdShowAllActionPerformed(evt);
            }
        });

        cbox_lecturerIdShowAll.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup3.add(cbox_lecturerIdShowAll);
        cbox_lecturerIdShowAll.setText("show all");
        cbox_lecturerIdShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_lecturerIdShowAllActionPerformed(evt);
            }
        });

        cbox_contracSuggestions.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(cbox_contracSuggestions);
        cbox_contracSuggestions.setSelected(true);
        cbox_contracSuggestions.setText("suggestions");
        cbox_contracSuggestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_contracSuggestionsActionPerformed(evt);
            }
        });

        cbox_contracShowAll.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(cbox_contracShowAll);
        cbox_contracShowAll.setText("show all");
        cbox_contracShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_contracShowAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rad_active)
                        .addGap(39, 39, 39)
                        .addComponent(rad_inactive))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser_endDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_contractid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_subjectid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser_startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_lecturerid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btn_resetMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbox_subjectIdSuggestions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbox_subjectIdShowAll))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbox_lecturerIdSuggestions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbox_lecturerIdShowAll))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbox_contracSuggestions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbox_contracShowAll)))))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_contractid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox_contracSuggestions, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox_contracShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_subjectid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox_subjectIdSuggestions, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbox_subjectIdShowAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lecturerid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_lecturerIdSuggestions, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbox_lecturerIdShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser_startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser_endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rad_active)
                    .addComponent(rad_inactive))
                .addGap(18, 18, 18)
                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_resetMain, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(142, 142, 142))
        );

        jTable1.setBackground(new java.awt.Color(240, 240, 240));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject ID", "Description", "Status"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        btn_editSelected1.setBackground(new java.awt.Color(69, 141, 152));
        btn_editSelected1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_editSelected1.setForeground(new java.awt.Color(255, 255, 255));
        btn_editSelected1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_editSelected1.setText("Get selected ID");
        btn_editSelected1.setOpaque(true);
        btn_editSelected1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_editSelected1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_editSelected1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_editSelected1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(btn_editSelected1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btn_editSelected1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Subject", jPanel7);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lecturer ID", "Name", "Status"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        btn_editSelected2.setBackground(new java.awt.Color(69, 141, 152));
        btn_editSelected2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_editSelected2.setForeground(new java.awt.Color(255, 255, 255));
        btn_editSelected2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_editSelected2.setText("Get selected ID");
        btn_editSelected2.setOpaque(true);
        btn_editSelected2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_editSelected2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_editSelected2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_editSelected2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btn_editSelected2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_editSelected2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Lecturer", jPanel9);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contract ID", "Description", "Subject ID", "Lecturer ID", "Start Date", "End Date", "Status"
            }
        ));
        jScrollPane7.setViewportView(jTable3);

        btn_editSelected.setBackground(new java.awt.Color(69, 141, 152));
        btn_editSelected.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btn_editSelected.setForeground(new java.awt.Color(255, 255, 255));
        btn_editSelected.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_editSelected.setText("Edit selected");
        btn_editSelected.setOpaque(true);
        btn_editSelected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_editSelectedMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_editSelectedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_editSelectedMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_editSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_editSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Contract Search", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseClicked


        boolean dateVld = false;
        
        int status = (rad_active.isSelected()) ? 1 : 0;
        try {


                
            Date date1 = jDateChooser_startDate.getDate();
            Date date2 = jDateChooser_endDate.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            startDate = sdf.format(date1);
            endDate = sdf.format(date2);
            
            
            long n1 = sdf.parse(sdf.format(date1)).getTime();
            long n2 = sdf.parse(sdf.format(date2)).getTime();
            
            if(n1>n2){
                dateVld=false;
            }else{
                dateVld=true;
            }
           
           
            
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select both end and start Dates !");
        } catch(Exception e){
            e.printStackTrace();
        }
        
        

        if ((checkFields())&&(dateVld)) {
            if(checkStatus("subject", "id_subject", txt_subjectid.getText())){
            if(checkStatus("lecturer", "id_lecturer", txt_lecturerid.getText())){
               
            try {
                ResultSet r1 = DB.search("select count(*) as rowCount from lecturer_contract where id_subject='"
                        +txt_subjectid.getText()+"'");
                ResultSet r2 = DB.search("select maxcontracts_number from subject where id_subject='"+txt_subjectid.getText()+"'");
                r1.next();
               r2.next();
                   int rowCount = r1.getInt("rowCount");
                    int maxCountractNumber = r2.getInt("maxcontracts_number");
                
            if(rowCount!=maxCountractNumber){
            if(checkRepeatingsameLecAndSub()){   
                SAVE("lecturer_contract", "'"
                        + txt_contractid.getText() + "','"
                        + txt_description.getText() + "','"
                        + txt_subjectid.getText() + "','"
                        + txt_lecturerid.getText() + "','"
                        + startDate + "','"
                        + endDate + "','"
                        + status + "'");
                JOptionPane.showMessageDialog(this, " Saved !");
                clearFields();
                genarateContractId();
                txt_description.grabFocus();
                if (cbox_contracShowAll.isSelected()) {
                    removeAllRows(jTable3);
                    
         fillTable(3);
         
                }
            }else{
                JOptionPane.showMessageDialog(this, "Same Subject and Lecturer repeating !");
            }
                 }else{
                JOptionPane.showMessageDialog(this, "Selected Subject has already reach to the max Countract count !");
            }
            
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Contract ID has already in the DataBase !. The Error Message: " + ex.getMessage());
            } catch (Exception e) {
                e.printStackTrace();
            }
            }else{
                JOptionPane.showMessageDialog(this, "Lecturer not Active !");
            }
            
            }else{
                JOptionPane.showMessageDialog(this, "Subject not Active !");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields or Have something wrong with given Dates!");
        }
    }//GEN-LAST:event_btn_saveMouseClicked

    private void btn_saveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseEntered
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_saveMouseEntered

    private void btn_saveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseExited
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_saveMouseExited

    private void btn_updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseClicked

        int status = (rad_active.isSelected()) ? 1 : 0;
        try {
            Date date1 = jDateChooser_startDate.getDate();
            Date date2 = jDateChooser_endDate.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            startDate = sdf.format(date1);
            endDate = sdf.format(date1);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select both end and start Dates !");
        }

        if (checkFields()) {
            try {
                ResultSet rs = DB.search("select count(1) as rowCount from lecturer_contract where id_contract='" + txt_contractid.getText() + "'");
                rs.next();
                if (rs.getInt("rowCount") != 0) {
                UPDATE("lecturer_contract",
                        "description='" + txt_description.getText()
                        + "',id_subject='" + txt_subjectid.getText()
                        + "',id_lecturer='" + txt_lecturerid.getText()
                        + "',start_date='" + startDate
                        + "',end_date='" + endDate
                        + "',status='" + status
                        + "'", "id_contract",
                        txt_contractid.getText());
                 JOptionPane.showMessageDialog(this, " Updated !");
                 removeAllRows(jTable3);
                    
         fillTable(3);
                 
                } else {
                    JOptionPane.showMessageDialog(this, "Contract ID is not same !");
                }
               

            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Contract ID has already in the DataBase !. The Error Message: " + ex.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields !");
        }
    }//GEN-LAST:event_btn_updateMouseClicked

    private void btn_updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseEntered
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_updateMouseEntered

    private void btn_updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMouseExited
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_updateMouseExited

    private void btn_deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_deleteMouseClicked
        try {
            UPDATE("lecturer_contract", "status='0'", "id_contract", txt_contractid.getText());
            JOptionPane.showMessageDialog(this, "Marked as Inactive !");
            rad_inactive.setSelected(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btn_deleteMouseClicked

    private void btn_deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_deleteMouseEntered
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_deleteMouseEntered

    private void btn_deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_deleteMouseExited
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_deleteMouseExited

    private void btn_resetMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMainMouseClicked
        clearFields();
        genarateContractId();
        txt_description.grabFocus();
    }//GEN-LAST:event_btn_resetMainMouseClicked

    private void btn_resetMainMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMainMouseEntered
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_resetMainMouseEntered

    private void btn_resetMainMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_resetMainMouseExited
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_resetMainMouseExited

    private void btn_editSelectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelectedMouseClicked
       txt_contractid.setText((String) jTable3.getValueAt(jTable3.getSelectedRow(), 0));
        try {
            SEARCH("lecturer_contract", "id_contract", (String) jTable3.getValueAt(jTable3.getSelectedRow(), 0));
            ResultSet rs = getResult();

            if (rs.next()) {
                txt_subjectid.setText(rs.getString("id_subject"));
                txt_lecturerid.setText(rs.getString("id_lecturer"));
                txt_description.setText(rs.getString("description"));
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String startDate = rs.getString("start_date");
                String endDate = rs.getString("end_date");
                Date parse1 = sdf.parse(startDate);
                Date parse2 = sdf.parse(endDate);
                jDateChooser_startDate.setDate(parse1);
                jDateChooser_endDate.setDate(parse2);
                
                

                if (rs.getBoolean("status")) {
                    rad_active.setSelected(true);
                } else {
                    rad_inactive.setSelected(true);
                }

                for (int i = 0; i < jf.size(); i++) {
                    textFieldTextType(0, jf.get(i));
                    if (jf.get(i).getText().equals("")) {
                        jf.get(i).setBackground(new java.awt.Color(253, 237, 237));
                    } else {
                        jf.get(i).setBackground(new java.awt.Color(178, 230, 245));
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_editSelectedMouseClicked

    private void btn_editSelectedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelectedMouseEntered
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelectedMouseEntered

    private void btn_editSelectedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelectedMouseExited
       colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelectedMouseExited

    private void txt_contractidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_contractidFocusGained
       warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_contractidFocusGained

    private void txt_contractidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_contractidFocusLost
        warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_contractidFocusLost

    private void txt_subjectidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_subjectidFocusGained
       warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_subjectidFocusGained

    private void txt_subjectidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_subjectidFocusLost
       warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_subjectidFocusLost

    private void txt_lectureridFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lectureridFocusGained
       warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_lectureridFocusGained

    private void txt_lectureridFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_lectureridFocusLost
       warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_lectureridFocusLost

    private void txt_contractidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contractidKeyReleased
        
            if (cbox_contracSuggestions.isSelected()) {
                removeAllRows(jTable3);
                jTabbedPane2.setSelectedIndex(2);
               try {
                    LIKESEARCH("lecturer_contract", "id_contract", txt_contractid.getText());
                    fillTableProcess(3);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
    }//GEN-LAST:event_txt_contractidKeyReleased

    private void cbox_contracSuggestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_contracSuggestionsActionPerformed
        if(cbox_contracSuggestions.isSelected()){
            jTabbedPane2.setSelectedIndex(2);
        }
    }//GEN-LAST:event_cbox_contracSuggestionsActionPerformed

    private void cbox_contracShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_contracShowAllActionPerformed
        if(cbox_contracShowAll.isSelected()){
            jTabbedPane2.setSelectedIndex(2);
        removeAllRows(jTable3);
        fillTable(3);
        }
    }//GEN-LAST:event_cbox_contracShowAllActionPerformed

    private void txt_subjectidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_subjectidKeyReleased
        if (cbox_subjectIdSuggestions.isSelected()) {
                removeAllRows(jTable1);
                jTabbedPane2.setSelectedIndex(0);
               try { 
                    PVTSEARCH4("id_subject", "description,status", "subject", "id_subject", txt_subjectid.getText()+"%");
                    fillTableProcess(1);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
    }//GEN-LAST:event_txt_subjectidKeyReleased

    private void cbox_subjectIdShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_subjectIdShowAllActionPerformed
        if(cbox_subjectIdShowAll.isSelected()){
            removeAllRows(jTable1);
                jTabbedPane2.setSelectedIndex(0);
               try { 
                    PVTSEARCH4("id_subject", "description,status", "subject", "id_subject", "%");
                    fillTableProcess(1);
                } catch (Exception e) {
                    e.printStackTrace();
                }
        }
    }//GEN-LAST:event_cbox_subjectIdShowAllActionPerformed

    private void cbox_lecturerIdShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_lecturerIdShowAllActionPerformed
       if(cbox_lecturerIdShowAll.isSelected()){
            removeAllRows(jTable2);
                jTabbedPane2.setSelectedIndex(1);
               try { 
                    PVTSEARCH4("id_lecturer", "concat(fname,' ',lname) as fullName,status", "lecturer", "id_lecturer", "%");
                    fillTableProcess(2);
                } catch (Exception e) {
                    e.printStackTrace();
                }
        }
    }//GEN-LAST:event_cbox_lecturerIdShowAllActionPerformed

    private void txt_lectureridKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_lectureridKeyReleased
        if (cbox_subjectIdSuggestions.isSelected()) {
                removeAllRows(jTable2);
                jTabbedPane2.setSelectedIndex(1);
               try { 
                    PVTSEARCH4("id_lecturer", "concat(fname,' ',lname) as fullName,status", "lecturer", "id_lecturer", txt_lecturerid.getText()+"%");
                    fillTableProcess(2);
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
    }//GEN-LAST:event_txt_lectureridKeyReleased

    private void btn_editSelected1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected1MouseClicked
       txt_subjectid.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
       txt_subjectid.setBackground(new java.awt.Color(178, 230, 245));
        textFieldTextType(0, txt_subjectid);
    }//GEN-LAST:event_btn_editSelected1MouseClicked

    private void btn_editSelected1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected1MouseEntered
         colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelected1MouseEntered

    private void btn_editSelected1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected1MouseExited
       colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelected1MouseExited

    private void btn_editSelected2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected2MouseClicked
       txt_lecturerid.setText((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
       txt_lecturerid.setBackground(new java.awt.Color(178, 230, 245));
        textFieldTextType(0, txt_lecturerid);
    }//GEN-LAST:event_btn_editSelected2MouseClicked

    private void btn_editSelected2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected2MouseEntered
         colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelected2MouseEntered

    private void btn_editSelected2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editSelected2MouseExited
        colorButtons(evt.getID(), (JLabel) evt.getSource());
    }//GEN-LAST:event_btn_editSelected2MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_delete;
    private javax.swing.JLabel btn_editSelected;
    private javax.swing.JLabel btn_editSelected1;
    private javax.swing.JLabel btn_editSelected2;
    private javax.swing.JLabel btn_resetMain;
    private javax.swing.JLabel btn_save;
    private javax.swing.JLabel btn_update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JCheckBox cbox_contracShowAll;
    private javax.swing.JCheckBox cbox_contracSuggestions;
    private javax.swing.JCheckBox cbox_lecturerIdShowAll;
    private javax.swing.JCheckBox cbox_lecturerIdSuggestions;
    private javax.swing.JCheckBox cbox_subjectIdShowAll;
    private javax.swing.JCheckBox cbox_subjectIdSuggestions;
    private com.toedter.calendar.JDateChooser jDateChooser_endDate;
    private com.toedter.calendar.JDateChooser jDateChooser_startDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JRadioButton rad_active;
    private javax.swing.JRadioButton rad_inactive;
    private javax.swing.JTextField txt_contractid;
    private javax.swing.JTextArea txt_description;
    private javax.swing.JTextField txt_lecturerid;
    private javax.swing.JTextField txt_subjectid;
    // End of variables declaration//GEN-END:variables
private boolean checkFields() {

        if (txt_lecturerid.getText().equals("")
                && txt_contractid.getText().equals("")
                && txt_description.getText().equals("")
                && txt_subjectid.getText().equals("")
                && txt_lecturerid.getText().equals("")) {
            return false;
        } else {
            return true;
        }

    }

    private void colorButtons(int i, JLabel jl) {
        if (i == 504) {
            jl.setBackground(new java.awt.Color(117, 170, 179));

        } else if (i == 505) {
            jl.setBackground(new java.awt.Color(69, 141, 152));
        }
    }
    
    private void textFieldTextType(int i, JTextField jt) {
        if (i == 0) {
            jt.setForeground(new java.awt.Color(0, 0, 0));
            Font f = new Font("Tahoma", 0, 16);
            jt.setFont(f);
        } else if (i == 1) {
            jt.setForeground(new java.awt.Color(124, 124, 124));
            Font f = new Font("Tahoma", 0, 14);
            jt.setFont(f);
        }

    }

    private void setDefaultTextField() {
        for (JTextField jTextField : jf) {
            jTextField.setBackground(new java.awt.Color(253, 237, 237));
            jTextField.setForeground(new java.awt.Color(124, 124, 124));
            Font f = new Font("Tahoma", 0, 14);
            jTextField.setFont(f);
        }
    }
    

    private void addTextFieldsToList() {
        jf = new ArrayList<JTextField>();
        
        jf.add(txt_lecturerid);
        jf.add(txt_subjectid);

    }

    private void addDefaultTextToList() {
        defaultText = new ArrayList<String>();
        
        defaultText.add("Lecturer ID");
        defaultText.add("Subject ID");

    }

    private void setDefaultText() {
        for (int i = 0; i < defaultText.size(); i++) {
            jf.get(i).setText(defaultText.get(i));
        }
    }

    private void clearFields() {
        
        setDefaultText();
        setDefaultTextField();
        txt_description.setText("");
        rad_active.setSelected(true);
        jDateChooser_startDate.setDate(null);
        jDateChooser_endDate.setDate(null);
    }
    private void warnningLabel(int id, JTextField jTextField) {

        if (id == 1004) {
            if (jTextField.getFont().getSize() == 14) {
                prevText = jTextField.getText();
                jTextField.setText("");
                textFieldTextType(0, jTextField);

            }
            jTextField.setBackground(new java.awt.Color(218, 243, 250));
        } else if (id == 1005) {
            if (jTextField.getText().equals("")) {
                jTextField.setText(prevText);
                textFieldTextType(1, jTextField);
                prevText = null;
                jTextField.setBackground(new java.awt.Color(253, 237, 237));

            } else {
                prevText = null;
                jTextField.setBackground(new java.awt.Color(178, 230, 245));
            }
        }

    }
    
    private boolean checkStatus(String tableName,String coloumnName, String searchValue) {
        try {
          return STATUSSEARCH(tableName, coloumnName, searchValue);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            return false;
        }
  
       
    }
    
    private void removeAllRows(JTable j) {
        for (int i = j.getRowCount() - 1; i >= 0; i--) {
            ((DefaultTableModel) j.getModel()).removeRow(i);
        }
    }
    
 private void fillTableProcess(int i) {
        
         try { 
             if(i==3){
            ResultSet rs = getResult();
            while (rs.next()) {
                
                String id_contract = rs.getString("id_contract");
                String description = rs.getString("description");
                String id_lecturer = rs.getString("id_lecturer");
                String id_subject = rs.getString("id_subject");
                String start_date = rs.getString("start_date");
                String end_date = rs.getString("end_date");
                boolean status = rs.getBoolean("status");

                Vector v = new Vector();

                v.add(id_contract);
                v.add(description);
                v.add(id_subject);
                v.add(id_lecturer);
                v.add(start_date);
                v.add(end_date);
                if (status) {
                    v.add("Active");
                } else {
                    v.add("Inactive");
                }

                dtm1 = (DefaultTableModel) jTable3.getModel();
                dtm1.addRow(v);
            }

            }else if(i==1){
                ResultSet rs = getResult();
            while (rs.next()) {
                
                String id_subject = rs.getString("id_subject");
                String description = rs.getString("description");
                String status = String.valueOf(rs.getInt("status"));
                

                Vector v = new Vector();

                v.add(id_subject);
                v.add(description);
                v.add(status);
                

                dtm1 = (DefaultTableModel) jTable1.getModel();
                dtm1.addRow(v);
            }
            }else if(i==2){
                
                ResultSet rs = getResult();
            while (rs.next()) {
                
                String id_lecturer = rs.getString("id_lecturer");
                String fullName = rs.getString("fullName");
                String status = rs.getString("status");
                

                Vector v = new Vector();

                v.add(id_lecturer);
                v.add(fullName);
                v.add(status);
                

                dtm1 = (DefaultTableModel) jTable2.getModel();
                dtm1.addRow(v);
            }
            }
             
        } catch (Exception e) {
            e.printStackTrace();
        }
    }   

 private void fillTable(int i) {
        try {
            SEARCH("lecturer_contract");
            fillTableProcess(3);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void genarateContractId() {
        try {
            ResultSet rs = DB.search("select count(*) as cls_count from lecturer_contract");
            if (rs.next()) {
                int count = rs.getInt("cls_count");
                String classid = "AECNTRCT" + (++count);
                txt_contractid.setText(classid);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
   private boolean checkRepeatingsameLecAndSub(){
       boolean b = false;
       try {
           ResultSet rs = DB.search("select count(id_contract) as count from lecturer_contract where id_subject='"+
                   txt_subjectid.getText()+"' and id_lecturer='"+
                   txt_lecturerid.getText()+"' ");
           if(rs.next()){
               if(rs.getInt("count")>0){
                   b=false;
               }else{
                   b=true;
               }
           }
       } catch (Exception e) {
           JOptionPane.showMessageDialog(this, e);
       }
       
       return b;
   }

}
