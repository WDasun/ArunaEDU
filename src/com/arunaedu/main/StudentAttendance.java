/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arunaedu.main;

import static com.anuraedu.common.SQ.LIKESEARCH;
import static com.anuraedu.common.SQ.SEARCH;
import static com.anuraedu.common.SQ.STATUSSEARCH;
import static com.anuraedu.common.SQ.getResult;
import com.anuraedu.db.DB;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class StudentAttendance extends javax.swing.JInternalFrame {

    DefaultTableModel dtm1;

    public StudentAttendance() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) this.getUI();
        bif.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_studentid = new javax.swing.JTextField();
        txt_classid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbox_studentidSuggestion = new javax.swing.JCheckBox();
        cbox_studentidShowall = new javax.swing.JCheckBox();
        cbox_classidSuggestion = new javax.swing.JCheckBox();
        cbox_classidShowall = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        txt_startTime = new javax.swing.JTextField();
        txt_endTime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_1 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1670, 1040));

        jPanel1.setBackground(new java.awt.Color(178, 230, 245));

        txt_studentid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_studentid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_studentid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_studentidKeyReleased(evt);
            }
        });

        txt_classid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_classid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_classid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_classidKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(76, 76, 76));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Class ID");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(76, 76, 76));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Student ID");

        cbox_studentidSuggestion.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(cbox_studentidSuggestion);
        cbox_studentidSuggestion.setSelected(true);
        cbox_studentidSuggestion.setText("suggestions");
        cbox_studentidSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_studentidSuggestionActionPerformed(evt);
            }
        });

        cbox_studentidShowall.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(cbox_studentidShowall);
        cbox_studentidShowall.setText("show all");
        cbox_studentidShowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_studentidShowallActionPerformed(evt);
            }
        });

        cbox_classidSuggestion.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(cbox_classidSuggestion);
        cbox_classidSuggestion.setSelected(true);
        cbox_classidSuggestion.setText("suggestions");
        cbox_classidSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classidSuggestionActionPerformed(evt);
            }
        });

        cbox_classidShowall.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(cbox_classidShowall);
        cbox_classidShowall.setText("show all");
        cbox_classidShowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classidShowallActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(69, 141, 152));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_startTime.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_startTime.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_startTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_startTimeKeyReleased(evt);
            }
        });

        txt_endTime.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_endTime.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_endTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_endTimeKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(76, 76, 76));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("class start D/T");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(76, 76, 76));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("class end D/T");

        jButton2.setText(" Get current time");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(" Get current time");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_studentid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbox_studentidSuggestion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbox_studentidShowall))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_endTime, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_startTime, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_classid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbox_classidSuggestion)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbox_classidShowall))
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_studentid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbox_studentidShowall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbox_studentidSuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_classid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbox_classidShowall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbox_classidSuggestion, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_startTime, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_endTime, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Description", "Contract ID", "Status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTable2);

        jTabbedPane1.addTab("Class ID Search", jScrollPane8);

        jTable_1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable_1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "First name", "Last name", "NIC", "Contact No.", "Address", "Email", "Gender", "DOB", "FTHR.Fname", "FTHR.Lname", "FTHR.ContactNo.", "MTH.Fname", "MTH.Lname", "MTH.ContactNo.", "GDN.Fname", "GDN.Lname", "GDN.ContactNo.", "Status"
            }
        ));
        jTable_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_1);

        jTabbedPane1.addTab("Student ID Search", jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbox_studentidSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_studentidSuggestionActionPerformed
        if (cbox_studentidSuggestion.isSelected()) {
            jTabbedPane1.setSelectedIndex(1);
        }

    }//GEN-LAST:event_cbox_studentidSuggestionActionPerformed

    private void cbox_studentidShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_studentidShowallActionPerformed
        if (cbox_studentidShowall.isSelected()) {
            removeAllRows(jTable_1);
            jTabbedPane1.setSelectedIndex(1);
            try {
                SEARCH("student");
                fillTableProcess(1);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cbox_studentidShowallActionPerformed

    private void cbox_classidSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classidSuggestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbox_classidSuggestionActionPerformed

    private void cbox_classidShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classidShowallActionPerformed
        if (cbox_classidShowall.isSelected()) {
            removeAllRows(jTable2);
            jTabbedPane1.setSelectedIndex(0);
            try {
                SEARCH("class");
                fillTableProcess(2);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_cbox_classidShowallActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        txt_classid.setText((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_1MouseClicked
        txt_studentid.setText((String) jTable_1.getValueAt(jTable_1.getSelectedRow(), 0));
    }//GEN-LAST:event_jTable_1MouseClicked

    private void txt_studentidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_studentidKeyReleased
        if (cbox_studentidSuggestion.isSelected()) {
            removeAllRows(jTable_1);
            jTabbedPane1.setSelectedIndex(1);
            try {
                LIKESEARCH("student", "id_student", txt_studentid.getText());
                fillTableProcess(1);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_studentidKeyReleased

    private void txt_classidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_classidKeyReleased
        if (cbox_classidSuggestion.isSelected()) {
            removeAllRows(jTable2);
            jTabbedPane1.setSelectedIndex(0);
            try {
                LIKESEARCH("class", "id_class", txt_classid.getText());
                fillTableProcess(2);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_classidKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (checkFields()) {
            try {

                if (STATUSSEARCH("student", "id_student", txt_studentid.getText())) {
                    if (STATUSSEARCH("class", "id_class", txt_classid.getText())) {

                        ResultSet r1 = DB.search("SELECT count(*) as rowCount  FROM aruna_edu.attendance where id_student='"
                                + txt_studentid.getText() + "' AND id_class='"
                                + txt_classid.getText() + "' and date_time between '"
                                + txt_startTime.getText() + "' and '"
                                + txt_endTime.getText() + "'");
                        r1.next();
                        if(r1.getInt("rowCount")==0){
                        DB.push("insert into attendance (id_student,id_class,date_time) values ('"
                                + txt_studentid.getText() + "','"
                                + txt_classid.getText() + "',now())");
                        JOptionPane.showMessageDialog(this, " Saved !");
                        clearFields();
                        }else{
                             JOptionPane.showMessageDialog(this, "This student ID already has marked !");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Class not Active !");
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Student not Active !");
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields !");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_startTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_startTimeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_startTimeKeyReleased

    private void txt_endTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_endTimeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_endTimeKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
          txt_startTime.setText(sdf1.format(date));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
          txt_endTime.setText(sdf1.format(date));
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox cbox_classidShowall;
    private javax.swing.JCheckBox cbox_classidSuggestion;
    private javax.swing.JCheckBox cbox_studentidShowall;
    private javax.swing.JCheckBox cbox_studentidSuggestion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable_1;
    private javax.swing.JTextField txt_classid;
    private javax.swing.JTextField txt_endTime;
    private javax.swing.JTextField txt_startTime;
    private javax.swing.JTextField txt_studentid;
    // End of variables declaration//GEN-END:variables

    private void fillTableProcess(int i) {

        try {
            if (i == 1) {
                ResultSet rs = getResult();
                while (rs.next()) {

                    String id_student = rs.getString("id_student");
                    String fname = rs.getString("fname");
                    String lname = rs.getString("lname");
                    String nic = rs.getString("nic");
                    String contact_no = rs.getString("contact_no");
                    String address = rs.getString("address");
                    String email = rs.getString("email");
                    String gender = rs.getString("gender");
                    String dob = rs.getString("dob");
                    String father_fname = rs.getString("father_fname");
                    String father_lname = rs.getString("father_lname");
                    String father_ctn = rs.getString("father_ctn");
                    String mother_fname = rs.getString("mother_fname");
                    String mother_lname = rs.getString("mother_lname");
                    String mother_ctn = rs.getString("mother_ctn");
                    String guardian_fname = rs.getString("guardian_fname");
                    String guardian_lname = rs.getString("guardian_lname");
                    String guardian_ctn = rs.getString("guardian_ctn");

                    boolean status = rs.getBoolean("status");

                    Vector v = new Vector();

                    v.add(id_student);
                    v.add(fname);
                    v.add(lname);
                    v.add(nic);
                    v.add(contact_no);
                    v.add(address);
                    v.add(email);
                    v.add(gender);
                    v.add(dob);
                    v.add(father_fname);
                    v.add(father_lname);
                    v.add(father_ctn);
                    v.add(mother_fname);
                    v.add(mother_lname);
                    v.add(mother_ctn);
                    v.add(guardian_fname);
                    v.add(guardian_lname);
                    v.add(guardian_ctn);

                    if (status) {
                        v.add("Active");
                    } else {
                        v.add("Inactive");
                    }

                    dtm1 = (DefaultTableModel) jTable_1.getModel();
                    dtm1.addRow(v);
                }

            } else if (i == 2) {
                ResultSet rs = getResult();

                while (rs.next()) {

                    String id_class = rs.getString("id_class");
                    String description = rs.getString("description");
                    String id_contract = rs.getString("id_contract");

                    boolean status = rs.getBoolean("status");

                    Vector v = new Vector();

                    v.add(id_class);
                    v.add(description);
                    v.add(id_contract);

                    if (status) {
                        v.add("Active");
                    } else {
                        v.add("Inactive");
                    }

                    dtm1 = (DefaultTableModel) jTable2.getModel();
                    dtm1.addRow(v);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void removeAllRows(JTable j) {
        for (int i = j.getRowCount() - 1; i >= 0; i--) {
            ((DefaultTableModel) j.getModel()).removeRow(i);
        }
    }

    private void clearFields() {

        txt_classid.setText(null);
        txt_studentid.setText(null);

    }

    private boolean checkFields() {

        if (txt_studentid.getText().equals("")
                && txt_classid.getText().equals("")) {
            return false;
        } else {
            return true;
        }

    }

}
