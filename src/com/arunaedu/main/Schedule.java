/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arunaedu.main;

import static com.anuraedu.common.SQ.LIKESEARCH;
import static com.anuraedu.common.SQ.PVTSEARCH4;
import static com.anuraedu.common.SQ.SAVE;
import static com.anuraedu.common.SQ.SEARCH;
import static com.anuraedu.common.SQ.STATUSSEARCH;
import static com.anuraedu.common.SQ.UPDATE;
import static com.anuraedu.common.SQ.getResult;
import com.anuraedu.db.DB;
import java.sql.SQLIntegrityConstraintViolationException;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Schedule extends javax.swing.JInternalFrame {

    DefaultTableModel dtm1;
    String startDate, endDate, prevText, prevText2, examDate;
    ArrayList<JTextField> jf, jf2;
    ArrayList<String> defaultText, defaultText2;

    public Schedule() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) this.getUI();
        bif.setNorthPane(null);

        addDefaultTextToList();
        addDefaultTextToList2();
        addTextFieldsToList();
        addTextFieldsToList2();
        setDefaultText();
        setDefaultText2();
        setDefaultTextField();
        setDefaultTextField2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_classid = new javax.swing.JTextField();
        txt_examid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_description = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser_examdate = new com.toedter.calendar.JDateChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        cbox_examIdSuggestion = new javax.swing.JCheckBox();
        cbox_examIdShowall = new javax.swing.JCheckBox();
        cbox_classIdShowall = new javax.swing.JCheckBox();
        cbox_classIdSugestion = new javax.swing.JCheckBox();
        btn_save = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_classid2 = new javax.swing.JTextField();
        txt_assignmentid = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        txt_assignmentDescription = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        jDateChooser_endDate = new com.toedter.calendar.JDateChooser();
        jDateChooser_startDate = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        cbox_assignmentShowall = new javax.swing.JCheckBox();
        cbox_assignmentidSuggestions = new javax.swing.JCheckBox();
        cbox_classId2Showall = new javax.swing.JCheckBox();
        cbox_classId2Suggestion = new javax.swing.JCheckBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        btn_save2 = new javax.swing.JButton();
        btn_update2 = new javax.swing.JButton();
        btn_reset2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1670, 1040));

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1670, 1040));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Exam", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(76, 76, 76));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Exam ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 76, 76));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText(" Description");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(76, 76, 76));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Class ID");

        txt_classid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_classid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_classid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_classidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_classidFocusLost(evt);
            }
        });
        txt_classid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_classidKeyReleased(evt);
            }
        });

        txt_examid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_examid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_examid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_examidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_examidFocusLost(evt);
            }
        });
        txt_examid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_examidActionPerformed(evt);
            }
        });
        txt_examid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_examidKeyReleased(evt);
            }
        });

        txt_description.setColumns(20);
        txt_description.setRows(5);
        jScrollPane1.setViewportView(txt_description);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(76, 76, 76));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Date");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Exam ID", "Description", "Class ID", "Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Exam ID Search", jPanel3);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Description", "Contract ID", "Status"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Class ID search", jPanel5);

        buttonGroup2.add(cbox_examIdSuggestion);
        cbox_examIdSuggestion.setSelected(true);
        cbox_examIdSuggestion.setText("suggestions");
        cbox_examIdSuggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_examIdSuggestionActionPerformed(evt);
            }
        });

        buttonGroup2.add(cbox_examIdShowall);
        cbox_examIdShowall.setText("show all");
        cbox_examIdShowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_examIdShowallActionPerformed(evt);
            }
        });

        buttonGroup3.add(cbox_classIdShowall);
        cbox_classIdShowall.setText("show all");
        cbox_classIdShowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classIdShowallActionPerformed(evt);
            }
        });

        buttonGroup3.add(cbox_classIdSugestion);
        cbox_classIdSugestion.setSelected(true);
        cbox_classIdSugestion.setText("suggestions");
        cbox_classIdSugestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classIdSugestionActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_examid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_classid)
                                    .addComponent(jDateChooser_examdate, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbox_examIdSuggestion)
                            .addComponent(cbox_examIdShowall)
                            .addComponent(cbox_classIdSugestion)
                            .addComponent(cbox_classIdShowall)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_examid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbox_examIdSuggestion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbox_examIdShowall)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_classid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbox_classIdSugestion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbox_classIdShowall)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser_examdate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Assignment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(76, 76, 76));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Assignment ID");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(76, 76, 76));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText(" Description");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(76, 76, 76));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("class ID");

        txt_classid2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_classid2.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_classid2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_classid2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_classid2FocusLost(evt);
            }
        });
        txt_classid2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_classid2KeyReleased(evt);
            }
        });

        txt_assignmentid.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_assignmentid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_assignmentid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_assignmentidFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_assignmentidFocusLost(evt);
            }
        });
        txt_assignmentid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_assignmentidKeyReleased(evt);
            }
        });

        txt_assignmentDescription.setColumns(20);
        txt_assignmentDescription.setRows(5);
        jScrollPane6.setViewportView(txt_assignmentDescription);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(76, 76, 76));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("End Date");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(76, 76, 76));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText(" Start Date");

        buttonGroup4.add(cbox_assignmentShowall);
        cbox_assignmentShowall.setText("show all");
        cbox_assignmentShowall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_assignmentShowallActionPerformed(evt);
            }
        });

        buttonGroup4.add(cbox_assignmentidSuggestions);
        cbox_assignmentidSuggestions.setSelected(true);
        cbox_assignmentidSuggestions.setText("suggestions");
        cbox_assignmentidSuggestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_assignmentidSuggestionsActionPerformed(evt);
            }
        });

        buttonGroup5.add(cbox_classId2Showall);
        cbox_classId2Showall.setText("show all");
        cbox_classId2Showall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classId2ShowallActionPerformed(evt);
            }
        });

        buttonGroup5.add(cbox_classId2Suggestion);
        cbox_classId2Suggestion.setSelected(true);
        cbox_classId2Suggestion.setText("suggestions");
        cbox_classId2Suggestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_classId2SuggestionActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Assignment ID", "Class ID", "Description", "Start Date", "End Date"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Assignment ID search", jPanel6);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class ID", "Description", "Contract ID", "Status"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Class ID search", jPanel7);

        btn_save2.setText("Save");
        btn_save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save2ActionPerformed(evt);
            }
        });

        btn_update2.setText("Update");
        btn_update2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_update2ActionPerformed(evt);
            }
        });

        btn_reset2.setText("Reset");
        btn_reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reset2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser_startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_assignmentid, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                                    .addComponent(txt_classid2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbox_assignmentidSuggestions)
                            .addComponent(cbox_assignmentShowall)
                            .addComponent(cbox_classId2Suggestion)
                            .addComponent(cbox_classId2Showall)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(btn_save2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(9, 9, 9)
                            .addComponent(btn_update2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn_reset2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDateChooser_endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_assignmentid, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbox_assignmentidSuggestions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbox_assignmentShowall)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_classid2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbox_classId2Suggestion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbox_classId2Showall)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser_startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser_endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_reset2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_save2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1654, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 977, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed

        try {
            Date date1 = jDateChooser_examdate.getDate();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            examDate = sdf.format(date1);

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select Exam date !");
        }

        if (checkFields()) {

            try {
                if(STATUSSEARCH("class", "id_class", txt_classid.getText())){
                SAVE("shedule_exam", "'"
                        + txt_examid.getText() + "','"
                        + txt_description.getText() + "','"
                        + txt_classid.getText() + "','"
                        + examDate + "'"
                );
                JOptionPane.showMessageDialog(this, " Saved !");
                clearFields();
                if (cbox_examIdShowall.isSelected()) {
                    removeAllRows(jTable1);
                    fillTable(1);
                }
                }else{
                JOptionPane.showMessageDialog(this, "Class not Active !");
            }
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Exsam ID has already in the DataBase !. The Error Message: " + ex.getMessage());
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields !");
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed

        try {
            Date date1 = jDateChooser_examdate.getDate();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            examDate = sdf.format(date1);

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select Exam date !");
        }

        if (checkFields()) {
            try {
                ResultSet rs = DB.search("select count(1) as rowCount from shedule_exam where id_exam='" + txt_examid.getText() + "'");
                rs.next();
                if (rs.getInt("rowCount") != 0) {
                UPDATE("shedule_exam",
                        "description='" + txt_description.getText()
                        + "',id_class='" + txt_classid.getText()
                        + "',date='" + examDate
                        + "'", "id_exam",
                        txt_examid.getText());
                JOptionPane.showMessageDialog(this, " Updated !");
                if (cbox_examIdShowall.isSelected()) {
                    removeAllRows(jTable1);
                    fillTable(1);
                }
                
                } else {
                    JOptionPane.showMessageDialog(this, "Exam ID is not same !");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields !");
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void cbox_examIdShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_examIdShowallActionPerformed
        if (cbox_examIdShowall.isSelected()) {
            jTabbedPane1.setSelectedIndex(0);
            removeAllRows(jTable1);
            fillTable(1);
        }
    }//GEN-LAST:event_cbox_examIdShowallActionPerformed

    private void cbox_examIdSuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_examIdSuggestionActionPerformed
        if (cbox_examIdSuggestion.isSelected()) {
            jTabbedPane1.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cbox_examIdSuggestionActionPerformed

    private void txt_examidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_examidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_examidActionPerformed

    private void txt_examidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_examidKeyReleased
        if (cbox_examIdSuggestion.isSelected()) {
            removeAllRows(jTable1);
            jTabbedPane1.setSelectedIndex(0);
            try {
                LIKESEARCH("shedule_exam", "id_exam", txt_examid.getText());
                fillTableProcess(1);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_examidKeyReleased

    private void cbox_classIdShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classIdShowallActionPerformed
        if (cbox_classIdShowall.isSelected()) {
            jTabbedPane1.setSelectedIndex(1);
            removeAllRows(jTable2);
            fillTable(2);
        }
    }//GEN-LAST:event_cbox_classIdShowallActionPerformed

    private void cbox_classIdSugestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classIdSugestionActionPerformed
        if (cbox_classIdSugestion.isSelected()) {
            jTabbedPane1.setSelectedIndex(1);
        }
    }//GEN-LAST:event_cbox_classIdSugestionActionPerformed

    private void txt_classidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_classidKeyReleased
        if (cbox_classIdSugestion.isSelected()) {
            removeAllRows(jTable2);
            jTabbedPane1.setSelectedIndex(1);
            try {
                LIKESEARCH("class", "id_class", txt_classid.getText());
                fillTableProcess(2);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_classidKeyReleased

    private void txt_examidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_examidFocusGained
        warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_examidFocusGained

    private void txt_examidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_examidFocusLost
        warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_examidFocusLost

    private void txt_classidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classidFocusGained
        warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_classidFocusGained

    private void txt_classidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classidFocusLost
        warnningLabel(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_classidFocusLost

    private void btn_save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save2ActionPerformed
         boolean dateVld = false;
        try {
      
            Date date1 = jDateChooser_startDate.getDate();
            Date date2 = jDateChooser_endDate.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            startDate = sdf.format(date1);
            endDate = sdf.format(date2);
            
            
            long n1 = sdf.parse(sdf.format(date1)).getTime();
            long n2 = sdf.parse(sdf.format(date2)).getTime();
            
            if(n1>n2){
                dateVld=false;
            }else{
                dateVld=true;
            }
           
           
            
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select both end and start Dates !");
        } catch(Exception e){
            e.printStackTrace();
        }

        if (checkFields()&&dateVld) {
            try {
                if(STATUSSEARCH("class", "id_class", txt_classid2.getText())){
                SAVE("shedule_assignment", "'"
                        + txt_assignmentid.getText() + "','"
                        + txt_classid2.getText() + "','"
                        + txt_assignmentDescription.getText() + "','"
                        + startDate + "','"
                        + endDate + "'"
                );
                JOptionPane.showMessageDialog(this, " Saved !");
                clearFields2();
                if (cbox_assignmentShowall.isSelected()) {
                    removeAllRows(jTable4);
                    fillTable(3);
                }
                }else{
                JOptionPane.showMessageDialog(this, "Class not Active !");
            }
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Assignment ID has already in the DataBase !. The Error Message: " + ex.getMessage());
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields or Have something wrong with given Dates !");
        }
    }//GEN-LAST:event_btn_save2ActionPerformed

    private void btn_update2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_update2ActionPerformed
        try {
            Date start = jDateChooser_startDate.getDate();
            Date end = jDateChooser_endDate.getDate();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            startDate = sdf.format(start);
            endDate = sdf.format(end);

        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Select both Start date and Exam Date !");
        }

        if (checkFields()) {
            try {
                ResultSet rs = DB.search("select count(1) as rowCount from shedule_assignment where id_assignment='" + txt_assignmentid.getText() + "'");
                rs.next();
                if (rs.getInt("rowCount") != 0) {
                UPDATE("shedule_assignment",
                        "id_class='" + txt_classid2.getText()
                        + "',description='" + txt_assignmentDescription.getText()
                        + "',date_start='" + startDate
                        + "',date_end='" + endDate
                        + "'", "id_assignment",
                        txt_assignmentid.getText());
                JOptionPane.showMessageDialog(this, " Updated !");
                if (cbox_assignmentShowall.isSelected()) {
                    removeAllRows(jTable4);
                    fillTable(3);
                }
                
                } else {
                    JOptionPane.showMessageDialog(this, "Assignment ID is not same !");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all Fields !");
        }
    }//GEN-LAST:event_btn_update2ActionPerformed

    private void txt_assignmentidFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_assignmentidFocusGained
        warnningLabel2(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_assignmentidFocusGained

    private void txt_assignmentidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_assignmentidFocusLost
        warnningLabel2(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_assignmentidFocusLost

    private void txt_classid2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classid2FocusGained
        warnningLabel2(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_classid2FocusGained

    private void txt_classid2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_classid2FocusLost
        warnningLabel2(evt.getID(), (JTextField) evt.getSource());
    }//GEN-LAST:event_txt_classid2FocusLost

    private void cbox_assignmentShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_assignmentShowallActionPerformed
        if (cbox_assignmentShowall.isSelected()) {
            jTabbedPane2.setSelectedIndex(0);
            removeAllRows(jTable4);
            fillTable(3);
        }
    }//GEN-LAST:event_cbox_assignmentShowallActionPerformed

    private void cbox_assignmentidSuggestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_assignmentidSuggestionsActionPerformed
        if (cbox_assignmentidSuggestions.isSelected()) {
            jTabbedPane2.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cbox_assignmentidSuggestionsActionPerformed

    private void txt_assignmentidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_assignmentidKeyReleased
        if (cbox_assignmentidSuggestions.isSelected()) {
            removeAllRows(jTable4);
            jTabbedPane1.setSelectedIndex(0);
            try {
                LIKESEARCH("shedule_assignment", "id_assignment", txt_assignmentid.getText());
                fillTableProcess(3);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_assignmentidKeyReleased

    private void cbox_classId2ShowallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classId2ShowallActionPerformed
        if (cbox_classId2Showall.isSelected()) {
            jTabbedPane2.setSelectedIndex(1);
            removeAllRows(jTable5);
            fillTable(4);
        }
    }//GEN-LAST:event_cbox_classId2ShowallActionPerformed

    private void cbox_classId2SuggestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_classId2SuggestionActionPerformed
        if (cbox_classId2Suggestion.isSelected()) {
            jTabbedPane2.setSelectedIndex(1);
        }
    }//GEN-LAST:event_cbox_classId2SuggestionActionPerformed

    private void txt_classid2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_classid2KeyReleased
        if (cbox_classId2Suggestion.isSelected()) {
            removeAllRows(jTable5);
            jTabbedPane2.setSelectedIndex(1);
            try {
                LIKESEARCH("class", "id_class", txt_classid2.getText());
                fillTableProcess(4);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_txt_classid2KeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        txt_examid.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        try {
            SEARCH("shedule_exam", "id_exam", (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            ResultSet rs = getResult();

            if (rs.next()) {
                txt_description.setText(rs.getString("description"));
                txt_classid.setText(rs.getString("id_class"));
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String examDate = rs.getString("date");
                Date parse1 = sdf.parse(examDate);
                jDateChooser_examdate.setDate(parse1);

                for (int i = 0; i < jf.size(); i++) {
                    textFieldTextType(0, jf.get(i));
                    if (jf.get(i).getText().equals("")) {
                        jf.get(i).setBackground(new java.awt.Color(253, 237, 237));
                    } else {
                        jf.get(i).setBackground(new java.awt.Color(178, 230, 245));
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
                txt_assignmentid.setText((String) jTable4.getValueAt(jTable4.getSelectedRow(), 0));
        try {
            SEARCH("shedule_assignment", "id_assignment", (String) jTable4.getValueAt(jTable4.getSelectedRow(), 0));
            ResultSet rs = getResult();

            if (rs.next()) {
                txt_assignmentDescription.setText(rs.getString("description"));
                txt_assignmentid.setText(rs.getString("id_assignment"));
                txt_classid2.setText(rs.getString("id_class"));
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String d1 = rs.getString("date_start");
                String d2 = rs.getString("date_end");
                Date parse1 = sdf.parse(d1);
                Date parse2 = sdf.parse(d2);
                jDateChooser_startDate.setDate(parse1);
                jDateChooser_endDate.setDate(parse2);

                for (int i = 0; i < jf2.size(); i++) {
                    textFieldTextType(0, jf2.get(i));
                    if (jf2.get(i).getText().equals("")) {
                        jf2.get(i).setBackground(new java.awt.Color(253, 237, 237));
                    } else {
                        jf2.get(i).setBackground(new java.awt.Color(178, 230, 245));
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
               txt_classid.setText((String) jTable2.getValueAt(jTable2.getSelectedRow(), 0));
        txt_classid.setBackground(new java.awt.Color(178, 230, 245));
        textFieldTextType(0, txt_classid);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
               txt_classid2.setText((String) jTable5.getValueAt(jTable5.getSelectedRow(), 0));
        txt_classid2.setBackground(new java.awt.Color(178, 230, 245));
        textFieldTextType(0, txt_classid2);
    }//GEN-LAST:event_jTable5MouseClicked

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        clearFields();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reset2ActionPerformed
       clearFields2();
    }//GEN-LAST:event_btn_reset2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_reset2;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_save2;
    private javax.swing.JButton btn_update;
    private javax.swing.JButton btn_update2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JCheckBox cbox_assignmentShowall;
    private javax.swing.JCheckBox cbox_assignmentidSuggestions;
    private javax.swing.JCheckBox cbox_classId2Showall;
    private javax.swing.JCheckBox cbox_classId2Suggestion;
    private javax.swing.JCheckBox cbox_classIdShowall;
    private javax.swing.JCheckBox cbox_classIdSugestion;
    private javax.swing.JCheckBox cbox_examIdShowall;
    private javax.swing.JCheckBox cbox_examIdSuggestion;
    private com.toedter.calendar.JDateChooser jDateChooser_endDate;
    private com.toedter.calendar.JDateChooser jDateChooser_examdate;
    private com.toedter.calendar.JDateChooser jDateChooser_startDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextArea txt_assignmentDescription;
    private javax.swing.JTextField txt_assignmentid;
    private javax.swing.JTextField txt_classid;
    private javax.swing.JTextField txt_classid2;
    private javax.swing.JTextArea txt_description;
    private javax.swing.JTextField txt_examid;
    // End of variables declaration//GEN-END:variables

    private boolean checkFields() {
        if (txt_description.getText().equals("")
                && txt_classid.getText().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    private void textFieldTextType(int i, JTextField jt) {
        if (i == 0) {
            jt.setForeground(new java.awt.Color(0, 0, 0));
            Font f = new Font("Tahoma", 0, 16);
            jt.setFont(f);
        } else if (i == 1) {
            jt.setForeground(new java.awt.Color(124, 124, 124));
            Font f = new Font("Tahoma", 0, 14);
            jt.setFont(f);
        }

    }

    private void setDefaultTextField() {
        for (JTextField jTextField : jf) {
            jTextField.setBackground(new java.awt.Color(253, 237, 237));
            jTextField.setForeground(new java.awt.Color(124, 124, 124));
            Font f = new Font("Tahoma", 0, 14);
            jTextField.setFont(f);
        }
    }

    private void setDefaultText() {
        for (int i = 0; i < defaultText.size(); i++) {
            jf.get(i).setText(defaultText.get(i));
        }
    }

    private void addTextFieldsToList() {
        jf = new ArrayList<JTextField>();
        jf.add(txt_examid);
        jf.add(txt_classid);

    }

    private void addDefaultTextToList() {
        defaultText = new ArrayList<String>();
        defaultText.add("Exam ID");
        defaultText.add("Class ID");

    }

    private void clearFields() {

        setDefaultText();
        setDefaultTextField();
        txt_description.setText("");
        jDateChooser_examdate.setDate(null);
    }
    
        private void clearFields2() {

        setDefaultText2();
        setDefaultTextField2();
        txt_assignmentDescription.setText("");
        jDateChooser_startDate.setDate(null);
        jDateChooser_endDate.setDate(null);
    }

    private void warnningLabel(int id, JTextField jTextField) {

        if (id == 1004) {
            if (jTextField.getFont().getSize() == 14) {
                prevText = jTextField.getText();
                jTextField.setText("");
                textFieldTextType(0, jTextField);

            }
            jTextField.setBackground(new java.awt.Color(218, 243, 250));
        } else if (id == 1005) {
            if (jTextField.getText().equals("")) {
                jTextField.setText(prevText);
                textFieldTextType(1, jTextField);
                prevText = null;
                jTextField.setBackground(new java.awt.Color(253, 237, 237));

            } else {
                prevText = null;
                jTextField.setBackground(new java.awt.Color(178, 230, 245));
            }
        }

    }

    private void warnningLabel2(int id, JTextField jTextField) {

        if (id == 1004) {
            if (jTextField.getFont().getSize() == 14) {
                prevText2 = jTextField.getText();
                jTextField.setText("");
                textFieldTextType(0, jTextField);

            }
            jTextField.setBackground(new java.awt.Color(218, 243, 250));
        } else if (id == 1005) {
            if (jTextField.getText().equals("")) {
                jTextField.setText(prevText2);
                textFieldTextType(1, jTextField);
                prevText2 = null;
                jTextField.setBackground(new java.awt.Color(253, 237, 237));

            } else {
                prevText2 = null;
                jTextField.setBackground(new java.awt.Color(178, 230, 245));
            }
        }

    }

    private void removeAllRows(JTable j) {
        for (int i = j.getRowCount() - 1; i >= 0; i--) {
            ((DefaultTableModel) j.getModel()).removeRow(i);
        }
    }

    private void fillTable(int i) {
        try {
            if (i == 1) {
                SEARCH("shedule_exam");
                fillTableProcess(i);
            } else if (i == 2) {
                SEARCH("class");
                fillTableProcess(i);
            } else if (i == 3) {
                SEARCH("shedule_assignment");
                fillTableProcess(i);
            } else if (i == 4) {
                SEARCH("class");
                fillTableProcess(4);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTableProcess(int i) {

        try {
            if (i == 1) {
                ResultSet rs = getResult();
                while (rs.next()) {

                    String id_exam = rs.getString("id_exam");
                    String description = rs.getString("description");
                    String id_class = rs.getString("id_class");
                    String date = rs.getString("date");

                    Vector v = new Vector();

                    v.add(id_exam);
                    v.add(description);
                    v.add(id_class);
                    v.add(date);

                    dtm1 = (DefaultTableModel) jTable1.getModel();
                    dtm1.addRow(v);
                }

            } else if (i == 2) {
                ResultSet rs = getResult();

                while (rs.next()) {

                    String id_class = rs.getString("id_class");
                    String description = rs.getString("description");
                    String id_contract = rs.getString("id_contract");
                    boolean status = rs.getBoolean("status");

                    Vector v = new Vector();

                    v.add(id_class);
                    v.add(description);
                    v.add(id_contract);
                    if(status){
                        v.add("Active");
                    }else{
                         v.add("Inactive");
                    }
                    

                    dtm1 = (DefaultTableModel) jTable2.getModel();
                    dtm1.addRow(v);
                }
            } else if (i == 3) {

                ResultSet rs = getResult();
                while (rs.next()) {

                    String id_assignment = rs.getString("id_assignment");
                    String id_class = rs.getString("id_class");
                    String description = rs.getString("description");
                    String date_start = rs.getString("date_start");
                    String date_end = rs.getString("date_end");

                    Vector v = new Vector();

                    v.add(id_assignment);
                    v.add(id_class);
                    v.add(description);
                    v.add(date_start);
                    v.add(date_end);

                    dtm1 = (DefaultTableModel) jTable4.getModel();
                    dtm1.addRow(v);
                }
            } else if (i == 4) {
                ResultSet rs = getResult();

                while (rs.next()) {

                    String id_class = rs.getString("id_class");
                    String description = rs.getString("description");
                    String id_contract = rs.getString("id_contract");
                    boolean status = rs.getBoolean("status");

                    Vector v = new Vector();

                    v.add(id_class);
                    v.add(description);
                    v.add(id_contract);
                    if(status){
                        v.add("Active");
                    }else{
                         v.add("Inactive");
                    }

                    dtm1 = (DefaultTableModel) jTable5.getModel();
                    dtm1.addRow(v);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void addDefaultTextToList2() {
        defaultText2 = new ArrayList<String>();
        defaultText2.add("Asignment ID");
        defaultText2.add("Class ID");
    }

    private void addTextFieldsToList2() {
        jf2 = new ArrayList<JTextField>();
        jf2.add(txt_assignmentid);
        jf2.add(txt_classid2);
    }

    private void setDefaultText2() {
        for (int i = 0; i < defaultText2.size(); i++) {
            jf2.get(i).setText(defaultText2.get(i));
        }
    }

    private void setDefaultTextField2() {
        for (JTextField jTextField : jf2) {
            jTextField.setBackground(new java.awt.Color(253, 237, 237));
            jTextField.setForeground(new java.awt.Color(124, 124, 124));
            Font f = new Font("Tahoma", 0, 14);
            jTextField.setFont(f);
        }
    }
}
